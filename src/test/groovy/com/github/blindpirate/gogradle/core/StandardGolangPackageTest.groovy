/*
 * Copyright 2016-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *           http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

package com.github.blindpirate.gogradle.core

import org.junit.Test

import java.nio.file.Paths

import static com.github.blindpirate.gogradle.core.StandardGolangPackage.of

class StandardGolangPackageTest {
    StandardGolangPackage standardGolangPackage = of(Paths.get('go/ast'))

    @Test
    void 'rootPath of a standard package should be itself'() {
        assert standardGolangPackage.rootPathString == 'go/ast'
    }

    @Test
    void 'root path of standard package should be identical to path'() {
        assert standardGolangPackage.rootPath == standardGolangPackage.path
    }

    @Test
    void 'toString should succeed'() {
        assert standardGolangPackage.toString() == "StandardGolangPackage{path='go/ast'}"
    }

    @Test
    void 'package generated by standard package should also be standard'() {
        assert standardGolangPackage.resolve('go').get() instanceof StandardGolangPackage
        assert standardGolangPackage.resolve('go/ast/ast').get() instanceof StandardGolangPackage
    }

    @Test
    void 'equality check should succeed'() {
        assert standardGolangPackage == standardGolangPackage
        assert standardGolangPackage != null
        assert standardGolangPackage != UnrecognizedGolangPackage.of("go/ast")
        assert standardGolangPackage == StandardGolangPackage.of("go/ast")
    }
}
