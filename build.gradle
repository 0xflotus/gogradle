group 'com.github.blindpirate'
version '0.0.1-SNAPSHOT'

/************** plugins **************/
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'findbugs'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'
apply plugin: 'antlr'

apply from: 'config/scripts/coverage.gradle'

/************** sourcesets **************/
sourceSets {
    // Note that just declaring this sourceset creates two configurations.
    main {
        java {
            srcDirs += ['src/main/antlr']
        }
    }
    integrationTest {
        java.srcDir 'src/integration-test/java'
        groovy.srcDir 'src/integration-test/groovy'
        resources.srcDir 'src/integration-test/resources'
    }
}

/************** dependencies **************/
repositories {
    mavenLocal()
    mavenCentral()
}
dependencies {
    integrationTestCompile sourceSets.main.output
    integrationTestCompile sourceSets.test.output
    integrationTestCompile configurations.testCompile
    integrationTestRuntime configurations.testRuntime

    antlr "org.antlr:antlr4:4.6"

    compile gradleApi()
    compile "org.antlr:antlr4:4.6"
    compile group: 'com.google.inject', name: 'guice', version: '4.1.0'
    compile 'org.codehaus.groovy:groovy-all:2.4.7'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    compile 'com.google.guava:guava:20.0'
    compile 'com.github.zafarkhaja:java-semver:0.9.0'
    compile group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: '4.5.0.201609210915-r'
    compile group: 'org.jsoup', name: 'jsoup', version: '1.7.2'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.5'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.8.5'
    compile group: 'com.google.code.findbugs', name: 'annotations', version: '3.0.1'
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.8.5'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.3.7'
    testCompile group: 'net.lingala.zip4j', name: 'zip4j', version: '1.3.2'
}
/************** test **************/
// Define integration test task
task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
}

project.tasks.withType(Test) {
    if (gradle.startParameter.isOffline()) {
        it.systemProperty("TEST_ARE_OFFLINE", 'true')
        it.systemProperty("GRADLE_DIST_HOME", gradle.gradleHomeDir)
    }
}

check.dependsOn integrationTest
integrationTest.dependsOn test
test.dependsOn 'jar'

/************** checkstyle **************/

checkstyle {
    toolVersion = '6.7'
}

checkstyleTest {
    enabled = false
}

/************** findbugs **************/

tasks.withType(FindBugs) {
    reports {
        xml.enabled false
        html.enabled true
    }
    def antlrDirPath = 'com/github/blindpirate/gogradle/antlr'
    // FindBugs can't recognize groovy closure
    classes = classes.filter {
        !it.path.contains(antlrDirPath) && !(it.name ==~ /.*_closure\d+\.class/)
    }
}

/************** COVERAGE **************/

jacoco {
    toolVersion = "0.7.7.201606060606"
}

check.dependsOn 'coverageCheck'

/************** antlr **************/
generateGrammarSource {
    // WARNING: DO NOT put source files here, every time this task executed, this directory will be overwritten
    // Don't ask me how I know it.  T^T
    outputDirectory = file('src/main/antlr/com/github/blindpirate/gogradle/antlr')
    arguments += ['-package', 'com.github.blindpirate.gogradle.antlr']
}

/************** wrapper **************/

task wrapper(type: Wrapper) {
    gradleVersion = '3.2'
}

